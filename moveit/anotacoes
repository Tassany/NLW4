- Utilizamos uma biblioteca de construção de interfaces, tudo que que é visual é criado a partir do js
como ele roda pelo lado do cliente. Então, quando carregamos uma aplicação pela primeira vez, não existe
nada na tela, so depois de um momento que ele faz a interface em tela(colocando textos, botões, etc...)

-Componentes: tudp é feito em componentes dentro do react. Uma função que retorna um html. Deixa o código mais legível
e reaproveitável

- Componentes, propriedades e estado

-Imultabilidade

- Falar sobre o Next.js SSR(server-side rendering )


import {useState} from 'react';

interface ButtonProps{
    color:string;
    children:string;
}

export function Button(props: ButtonProps){
    const [counter,setCounter] = useState(1);

    function increment(){
        setCounter(counter + 1);
    }

    return(
        <button type="button"
        style={{backgroundColor: props.color}}
        onClick={increment}
        >
        {props.children}<strong>{counter}</strong>
        </button>
    )
}
